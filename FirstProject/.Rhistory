getwd()
setwd("C:\Users\Edoardo\Documents\R")
setwd("Users\Edoardo\Documents\R")
setwd("Users\edoardo\Documents\R")
setwd("Users\edoardo\Documents\R")
setwd("C:/Users/Edoardo/Documents/R")
getwd()
getwd()
X=1:1000
Y=X^2
plot(X,Y)
data.frame(X,Y)
PA = data.frame(X,Y)
class(PA)
Pa
PA
row.names(PA)
colnames(PA)
pa.lm=lm(PA$X, PA$Y)
pa.lm=lm(PA$X~PA$Y)
plot(pa.lm)
summary(pa.lm)
x=1:100
x =c(x, 100:1)
x
mean(((x-mean(x))/sd(x))^3)
x = 1:2000
mean(((x-mean(x))/sd(x))^3)
x
x = seq(1,100,5)
x
x = c(x, 100:1)
x
mean(((x-mean(x))/sd(x))^3)
x=1
x=c(x,500:1000)
x=c(x,10000)
x
mean(((x-mean(x))/sd(x))^4) - 3
x=1:100
x=c(x,100:1)
mean(((x-mean(x))/sd(x))^4) - 3
x
x=1:100
x=c(x,99:1)
mean(((x-mean(x))/sd(x))^4) - 3
x=dnorm()
x=dnorm(1000)
x
dnorm(x,0,20)
x
rnorm(1000)
x=rnorm(100)
x
qqnorm(x)
qqnorm(x, pch=20)
x=rnorm(10000)
qqnorm(x, pch=20)
qqnorm(x, pch=20)
x_sorted = sort(x)
k=length(x_sorted)*0.95
x[k]
quantile(x,0.95)
x
quantile(x_sorted,0.95)
x_sorted = sort(x)
k=length(x_sorted)*0.95
x[k]
x_sorted = sort(x)
k=length(x_sorted)*0.95
k=round(k)
x[k]
x_sorted
length(x)
k=length(x_sorted)*0.95
k
x[k]
quantile(x_sorted,0.95)
x_sorted[k]
N=1000
for(i in 1:N){
x=rexp(10000,4)
}
hist
N=1000
for(i in 1:N){
x=rexp(10000,4)
}
hist
N=1000
res=rep(0,N)
for(i in 1:N){
x=rexp(10000,4)
res[i]=sum(x>7)
}
hist(res, 100, freq=FALSE)
x
sum(x>7)
y=c(1,2,3,4,5,6,7,8,9,10)
sum(y>7)
N=1000
res=rep(0,N)
for(i in 1:N){
x=rexp(10000,4)
res[i]=sum(x>7)
}
hist(res, 100, freq=FALSE)
N=1000
res=rep(0,N)
for(i in 1:N){
x=rexp(10000,4)
sum(z>7)
res[i]=sum(x>7)
}
hist(res, 100, freq=FALSE)
N=1000
res=rep(0,N)
for(i in 1:N){
x=rexp(10000,4)
sum(x>7)
res[i]=sum(x>7)
}
hist(res, 100, freq=FALSE)
N=1000
res=rep(0,N)
for(i in 1:N){
x=rexp(10000,4)
sum(x>7)
res[i]=sum(x>7)
}
hist(res, 100, freq=FALSE)
res
N=1000
res=rep(0,N)
for(i in 1:N){
x=rexp(10000,4)
res[i]=sum(x>0.7)
}
hist(res, 100, freq=FALSE)
res
N=1000
res=rep(0,N)
for(i in 1:N){
x=rexp(10000,4)
sum(x>7)
res[i]=sum(x>7)
}
hist(res, 100)
N=1000
res=rep(0,N)
for(i in 1:N){
x=rexp(10000,4)
sum(x>7)
res[i]=sum(x>7)
}
hist(res, 1)
N=1000
res=rep(0,N)
for(i in 1:N){
x=rexp(10000,4)
sum(x>7)
res[i]=sum(x>1)
}
hist(res, 1)
N=1000
res=rep(0,N)
for(i in 1:N){
x=rexp(10000,4)
sum(x>7)
res[i]=sum(x>1)
}
hist(res)
rexp(100, 4)
rexp(100, 0.25)
N=1000
res=rep(0,N)
for(i in 1:N){
x=rexp(10000,0.25)
sum(x>7)
res[i]=sum(x>7)
}
hist(res)
N=1000
res=rep(0,N)
for(i in 1:N){
x=rexp(10000,0.25)
sum(x>7)
res[i]=sum(x>7)
}
hist(res)
qmin=quantile(res, 0.05)
qmax=quantile(res,0.95)
int = c(qmin,qmax)
int
lines(sort(res),dnorm(sort(res), mean(res),sd(res), col="red"))
lines(sort(res),dnorm(sort(res), mean(res),sd(res)), col="red")
N=1000
res=rep(0,N)
for(i in 1:N){
x=rexp(10000,0.25)
sum(x>7)
res[i]=sum(x>7)
}
hist(res, 100, freq=FALSE)
res
N=1000
res=rep(0,N)
for(i in 1:N){
x=rexp(10000,0.25)
res[i]=sum(x>7)/10000
}
hist(res, 100, freq=FALSE)
res
hist(res, 100, freq=FALSE)
quantile(res, 0.05)
quantile(res, 0.95)
x=rexp(10000, 1)
x
x
plot(x)
x.res = resid(x)
x=rexp(10000, 1)
y=rexp(10000, 1)
PA=data.fram(X,Y)
PA=data.frame(X,Y)
PA=data.frame(x,y)
pa.lm=lm(PA$x~PA$y)
plot(PA$x,PA$y)
plot(resid(pa.lm))
plot(predict(pa.lm),resid(pa.lm))
pa.lm.res=resid(pa.lm)
hist(pa.lm.res, 10, freq=F)
hist(pa.lm.res, 1, freq=F)
hist(pa.lm.res, 0.01, freq=F)
hist(pa.lm.res, 0.1, freq=F)
hist(pa.lm.res, 1, freq=F)
pa.lm.res
x=rexp(10000, 0.25)
y=rexp(10000, 0.25)
PA=data.frame(x,y)
pa.lm=lm(PA$x~PA$y)
pa.lm.res=resid(pa.lm)
hist(pa.lm.res, 10, freq=F)
hist(pa.lm.res, 1, freq=F)
hist(pa.lm.res, 1000, freq=F)
hist(pa.lm.res, 100000, freq=F)
hist(pa.lm.res, 1000, freq=F)
lines(sort(pa.lm.res), dnorm(sort(pa.lm.res), mean(pa.lm.res), sd(pa.lm.res)), col="red")
library(MASS)
Auto<-Cars93[, -c(1,2,3,4,6,7,8,9,10,11,15,16,18,22,23,24,26,27)]
head(Auto)
str(Auto)
plot(Auto)
install.packages('corrplot')
library(corrplot)
corrplot(corr(Auto), square)
corrplot(corr(Auto), "square")
corrplot(cor(Auto), "square")
library(scatterplot3d)
install.packages('scatterplot3s')
install.packages('scatterplot3d')
ph.lm = lm(Price~Horsepower, data=Auto)
plot(Auto$Horsepower,Auto$Price)
abline(ph.lm)
summary(ph.lm)$r.squared
Auto.lm=lm(Price~., Data=Auto)
Auto.lm=lm(Price~., data=Auto)
summary(Auto.lm)
confint(Auto.lm, "EngineSize", level=.95)
confint(Auto.lm, level=.95)
Auto.lm.r=residuals(Auto.lm)
hist(Auto.lm.r, 20, freq=F)
lines(density(Auto.lm.r),col="red")
m=mean(Auto.lm.r)
s=sd(Auto.lm.r)
lines(sort(Auto.lm.r),dnorm(sort(Auto.lm.r),m,s))
library(Auto93)
library(MASS)
Auto <- Cars93[,-c(1,2,3,4,6,7,8,9,10,11,15,16,18,22,23,24,26,27)]
summary(Auto)
scaled.Auto <- scale(Auto)
head(Auto)
head(scaled.Auto)
r = c()
head(longley)
ll1 = lm(Employed~GNP.deflator+GNP+Unemployed+Armed.Forces+Population+Year, data=longley)
summary(ll1)
ll1$r.squared
summary(ll1)$r.squared
r=matrix(ncol=2, nrow=3)
r[1,]=c(summary(ll1)$r.squared, summary(ll1)$adj.r.squared)
r
ll2=lm(Employed~GNP.deflator+GNP+Unemployed+Armed.Forces+Population+Year, data=longley)
r[2,]=c(summary(ll2)$r.squared, summary(ll2)$adj.r.squared)
r
ll3=lm(Employed~GNP+Unemployed+Armed.Forces+Population+Year, data=longley)
r[3,]=c(summary(ll3)$r.squared, summary(ll3)$adj.r.squared)
plot(r)
plot(r, seq(1,3))
plot(r, seq(1,4))
plot(r, seq(0,3))
plot(seq(0,3))
plot(r)
r
plot(r[,1])
plot(r[,1]-mean(r[,1]))
# importazione librerie da utilizzare
library(corrplot)
library(scatterplot3d)
# importazione librerie da utilizzare
library(corrplot)
# pulizia RStudio
cat("\014")
#library(scatterplot3d)
#library(scatterplot3d)
rm(list = ls())
library(scatterplot3d)
# importazione librerie da utilizzare
library(corrplot)
library(scatterplot3d)
# importazione librerie da utilizzare
library(corrplot)
library(scatterplot3d)
# pulizia RStudio
cat("\014")
rm(list = ls())
# importazione librerie da utilizzare
library(corrplot)
library(scatterplot3d)
# pulizia RStudio
cat("\014")
# importazione librerie da utilizzare
library(corrplot)
library(scatterplot3d)
# caricamento dei dati dal file csv
data = read.csv('tabella.csv', header = TRUE, sep = ";")
wd()
getwd()
setwd("C:\Users\Edoardo\Projects\Statistics")
setwd("C:/Users/Edoardo/Projects/Statistics")
getwd()
# caricamento dei dati dal file csvs
data = read.csv('tabella.csv', header = TRUE, sep = ";")
# importazione librerie da utilizzare
library(corrplot)
library(scatterplot3d)
# caricamento dei dati dal file csvs
data = read.csv('tabella.csv', header = TRUE, sep = ";")
getwd()
setwd("C:/Users/Edoardo/Projects/Statistics/FirstProject")
# caricamento dei dati dal file csvs
data = read.csv('tabella.csv', header = TRUE, sep = ";")
head(data)
data
data$nome_colonna <- NULL
# notiamo che ci sono un numero non indifferente di NA in alcune colonne,
# eliminiamo tali colonne
data$Accelerator.Co.Processor.Cores <- NULL
